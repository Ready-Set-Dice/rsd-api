name: weekly-update
run-name: 'Weekly check for changes in the foundry data repository'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 2'

jobs:
  get-foundry:
    runs-on: ubuntu-latest
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
      - name: checkout foundry repo
        uses: actions/checkout@v3
        with:
          repository: foundryvtt/pf2e.git
          ref: 'master'
          path: '.foundry'
      - name: get foundry repo hash
        run: git --git-dir .foundry/.git rev-parse HEAD >> tmp
      - name: compare previous hash to current
        run: |
          if diff tmp .foundry-hash >/dev/null
          then
            echo 'Versions match'
            exit 1
          else
            echo 'Versions differ'
          fi
      - name: move files if new version
        run: |
          mv .foundry/packs .
          mkdir static
          mkdir static/lang
          mv .foundry/static/template.json static/.
          mv .foundry/static/lang/en.json static/lang/.
          mv .foundry/static/lang/re-en.json static/lang/.
      - name: prepare zip for artifact
        run: zip foundry.zip -r ./packs ./static
      - name: upload foundry data artifact
        uses: actions/upload-artifact@v3
        with:
          name: foundry-data
          path: |
            foundry.zip
      - name: upload foundry hash artifact
        with:
          name: foundry-hash
          path: |
            tmp
  check-compatible:
    runs-on: ubuntu-latest
    needs: get-foundry
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
      - name: retrieve foundry data artifact
        uses: actions/download-artifact@v3
        with:
          name: foundry-data
      - name: unzip the artifact
        run: unzip foundry.zip
      - name: setup the correct version of node
        uses: actions/setup-node@v3
        with:
          node-version: '18.2'
      - name: perform integration test
        run: |
          npm ci
          npm run test
  update-api:
    runs-on: ubuntu-latest
    needs: check-compatible
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GITSERVICE_RSA }}
          persist-credentials: true
      - name: retrieve foundry hash artifact
        uses: actions/download-artifact@v3
        with:
          name: foundry-hash
      - name: replace old foundry hash
        run: |
          rm .foundry-hash
          mv tmp .foundry-hash
      - name: update the .env file
        run: |
          . ./.env
          NEW_VERSION=$((BASE_VERSION+1))
          sed -i 's|BASE_VERSION='$BASE_VERSION'|BASE_VERSION='$NEW_VERSION'|g' ./.env
      - name: commit .env
        run: |
          git config --local user.email "gitservice@readysetdice.com"
          git config --local user.name "rsd-gitservice"
          git commit -a -m "Updated api version"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          ssh: true
          branch: ${{ github.ref }}
          force: true
  shutdown-and-remove:
    runs-on: ubuntu-latest
    needs: check-compatible
    steps:
      - name: stop and remove current pm2 instance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            pm2 stop db
            pm2 delete db
            cd ~/rsd/api/
            rm -rf ./packs
            rm -rf ./static
            git pull
  deploy-job:
    runs-on: ubuntu-latest
    needs: [update-api, shutdown-and-remove]
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
      - name: retrieve artifact
        uses: actions/download-artifact@v3
        with:
          name: foundry-data
      - name: copy files to server via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: foundry.zip
          target: /home/${{ secrets.DEPLOY_USER }}/rsd/api/
      - name: setup repo and restart pm2 service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ~/rsd/api
            npm install --omit=dev
            unzip foundry.zip
            rm foundry.zip
            pm2 start db.js
            pm2 save